# Generated by Django 4.2.23 on 2025-09-04 10:12

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('content', '0002_transform_license_table'),
    ]

    operations = [
        # Step 1: Drop existing resource table (contains old structure)
        migrations.RunSQL(
            sql="DROP TABLE IF EXISTS resource CASCADE;",
            reverse_sql="-- Cannot reverse resource table drop"
        ),
        
        # Step 2: Create new resource table with ERD-compliant structure
        migrations.RunSQL(
            sql="""
            CREATE TABLE resource (
                id integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                created_at timestamp with time zone NOT NULL,
                updated_at timestamp with time zone NOT NULL,
                is_active boolean NOT NULL DEFAULT true,
                publishing_organization_id integer NOT NULL,
                name varchar(255) NOT NULL,
                name_en varchar(255),
                name_ar varchar(255),
                slug varchar(50) NOT NULL,
                description text NOT NULL,
                description_en text,
                description_ar text,
                category varchar(20) NOT NULL,
                status varchar(20) NOT NULL DEFAULT 'draft',
                default_license_id integer NOT NULL,
                FOREIGN KEY (publishing_organization_id) REFERENCES publishing_organization(id) ON DELETE RESTRICT,
                FOREIGN KEY (default_license_id) REFERENCES license(id) ON DELETE RESTRICT
            );
            
            -- Create indexes for resource table
            CREATE INDEX idx_resource_publishing_organization ON resource (publishing_organization_id);
            CREATE INDEX idx_resource_category ON resource (category);
            CREATE INDEX idx_resource_status ON resource (status);
            CREATE INDEX idx_resource_slug ON resource (slug);
            CREATE INDEX idx_resource_is_active ON resource (is_active);
            """,
            reverse_sql="DROP TABLE IF EXISTS resource;"
        ),
        
        # Step 3: Create resource_version table
        migrations.RunSQL(
            sql="""
            CREATE TABLE resource_version (
                id integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                created_at timestamp with time zone NOT NULL,
                updated_at timestamp with time zone NOT NULL,
                is_active boolean NOT NULL DEFAULT true,
                resource_id integer NOT NULL,
                name varchar(255) NOT NULL,
                summary text NOT NULL DEFAULT '',
                semvar varchar(20) NOT NULL,
                storage_url varchar(200) NOT NULL,
                type varchar(20) NOT NULL,
                size_bytes bigint NOT NULL,
                is_latest boolean NOT NULL DEFAULT false,
                FOREIGN KEY (resource_id) REFERENCES resource(id) ON DELETE CASCADE,
                UNIQUE (resource_id, semvar)
            );
            
            -- Create indexes for resource_version table
            CREATE INDEX idx_resource_version_resource ON resource_version (resource_id);
            CREATE INDEX idx_resource_version_is_latest ON resource_version (is_latest);
            CREATE INDEX idx_resource_version_semvar ON resource_version (semvar);
            CREATE INDEX idx_resource_version_is_active ON resource_version (is_active);
            """,
            reverse_sql="DROP TABLE IF EXISTS resource_version;"
        ),
    ]
