# Generated by Django 4.2.23 on 2025-08-24 15:08

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('publishers', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('api_slug', models.SlugField(max_length=200)),
                ('visibility', models.CharField(choices=[('public', 'Public'), ('private', 'Private'), ('restricted', 'Restricted')], default='public', max_length=20)),
                ('base_endpoint', models.URLField(blank=True)),
                ('documentation_url', models.URLField(blank=True)),
                ('request_count', models.PositiveBigIntegerField(default=0)),
                ('last_accessed', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Asset',
                'verbose_name_plural': 'Assets',
                'db_table': 'resources_assets',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AssetVersion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('semver', models.CharField(max_length=20)),
                ('api_path', models.CharField(max_length=500)),
                ('package_name', models.CharField(blank=True, max_length=200)),
                ('docs_url', models.URLField(blank=True)),
                ('schema_version', models.CharField(blank=True, max_length=20)),
                ('data_format', models.CharField(default='json', max_length=50)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asset_versions', to='resources.asset')),
            ],
            options={
                'verbose_name': 'Asset Version',
                'verbose_name_plural': 'Asset Versions',
                'db_table': 'resources_asset_versions',
                'ordering': ['-created_at'],
                'unique_together': {('asset', 'semver')},
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(max_length=300)),
                ('slug', models.SlugField(blank=True, max_length=300)),
                ('description', models.TextField()),
                ('summary', models.CharField(blank=True, max_length=500)),
                ('resource_type', models.CharField(choices=[('quran_text', 'Quran Text'), ('hadith', 'Hadith Collection'), ('tafsir', 'Tafsir/Commentary'), ('audio', 'Audio Recitation'), ('translation', 'Translation'), ('calendar', 'Islamic Calendar'), ('prayer_times', 'Prayer Times'), ('names', 'Names of Allah'), ('other', 'Other')], default='other', max_length=20)),
                ('category', models.CharField(blank=True, max_length=100)),
                ('tags', models.JSONField(default=list, help_text='List of tags for categorization')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('review', 'Under Review'), ('published', 'Published'), ('archived', 'Archived'), ('rejected', 'Rejected')], default='draft', max_length=20)),
                ('visibility', models.CharField(choices=[('public', 'Public'), ('private', 'Private'), ('restricted', 'Restricted Access')], default='public', max_length=20)),
                ('language', models.CharField(default='ar', max_length=10)),
                ('source_language', models.CharField(blank=True, max_length=10)),
                ('target_languages', models.JSONField(default=list, help_text='List of language codes this resource supports')),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('rating_average', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('rating_count', models.PositiveIntegerField(default=0)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('featured', models.BooleanField(default=False)),
                ('default_license', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='resources', to='core.license')),
            ],
            options={
                'verbose_name': 'Resource',
                'verbose_name_plural': 'Resources',
                'db_table': 'resources_resources',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ResourceVersion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('semver', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Version must follow semantic versioning format (e.g., 1.0.0)', regex='^\\d+\\.\\d+\\.\\d+(-[\\w\\.-]+)?(\\+[\\w\\.-]+)?$')])),
                ('changelog', models.TextField(blank=True)),
                ('release_notes', models.TextField(blank=True)),
                ('processed', models.BooleanField(default=False)),
                ('processing_status', models.CharField(choices=[('pending', 'Pending Processing'), ('processing', 'Processing'), ('completed', 'Processing Completed'), ('failed', 'Processing Failed')], default='pending', max_length=20)),
                ('processing_log', models.TextField(blank=True)),
                ('api_endpoint', models.URLField(blank=True)),
                ('docs_url', models.URLField(blank=True)),
                ('size_bytes', models.PositiveBigIntegerField(default=0)),
                ('file_count', models.PositiveIntegerField(default=0)),
                ('checksum', models.CharField(blank=True, max_length=64)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('qa_notes', models.TextField(blank=True)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='resources.resource')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_versions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Resource Version',
                'verbose_name_plural': 'Resource Versions',
                'db_table': 'resources_versions',
                'ordering': ['-created_at'],
                'unique_together': {('resource', 'semver')},
            },
        ),
        migrations.CreateModel(
            name='ResourceVersionArtifact',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('filename', models.CharField(max_length=255)),
                ('storage_key', models.CharField(max_length=500, unique=True)),
                ('file_type', models.CharField(choices=[('json', 'JSON Data'), ('xml', 'XML Data'), ('csv', 'CSV Data'), ('txt', 'Text File'), ('pdf', 'PDF Document'), ('mp3', 'MP3 Audio'), ('wav', 'WAV Audio'), ('zip', 'ZIP Archive'), ('other', 'Other')], default='other', max_length=20)),
                ('mime_type', models.CharField(blank=True, max_length=100)),
                ('size_bytes', models.PositiveBigIntegerField()),
                ('checksum', models.CharField(max_length=64)),
                ('encoding', models.CharField(default='utf-8', max_length=50)),
                ('is_primary', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True)),
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='artifacts', to='resources.resourceversion')),
            ],
            options={
                'verbose_name': 'Resource Artifact',
                'verbose_name_plural': 'Resource Artifacts',
                'db_table': 'resources_artifacts',
                'ordering': ['filename'],
            },
        ),
        migrations.AddField(
            model_name='resource',
            name='latest_version',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='resources.resourceversion'),
        ),
        migrations.AddField(
            model_name='resource',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='publishers.publishingorganization'),
        ),
        migrations.CreateModel(
            name='Distribution',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('distribution_type', models.CharField(choices=[('api', 'REST API'), ('graphql', 'GraphQL API'), ('package', 'Package Manager'), ('download', 'Direct Download'), ('cdn', 'CDN Distribution')], max_length=20)),
                ('endpoint_url', models.URLField()),
                ('package_name', models.CharField(blank=True, max_length=200)),
                ('package_version', models.CharField(blank=True, max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('usage_count', models.PositiveBigIntegerField(default=0)),
                ('bandwidth_used', models.PositiveBigIntegerField(default=0)),
                ('asset_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='distributions', to='resources.assetversion')),
            ],
            options={
                'verbose_name': 'Distribution',
                'verbose_name_plural': 'Distributions',
                'db_table': 'resources_distributions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='asset',
            name='version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assets', to='resources.resourceversion'),
        ),
        migrations.AlterUniqueTogether(
            name='resource',
            unique_together={('organization', 'slug')},
        ),
        migrations.AlterUniqueTogether(
            name='asset',
            unique_together={('version', 'api_slug')},
        ),
    ]
