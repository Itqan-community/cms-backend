# Generated by Django 4.2.23 on 2025-08-21 08:45

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="MediaFolder",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for this record",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when this record was created",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp when this record was last updated",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this record is active (soft delete mechanism)",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("slug", models.SlugField(max_length=255, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_folders",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="medialib.mediafolder",
                    ),
                ),
            ],
            options={
                "db_table": "media_folders",
                "ordering": ["name"],
                "unique_together": {("parent", "slug")},
            },
        ),
        migrations.CreateModel(
            name="MediaFile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for this record",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when this record was created",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp when this record was last updated",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this record is active (soft delete mechanism)",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Display name for the file", max_length=255
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Optional description"),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to="uploads/%Y/%m/%d/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=[
                                    "jpg",
                                    "jpeg",
                                    "png",
                                    "gif",
                                    "webp",
                                    "svg",
                                    "mp3",
                                    "wav",
                                    "ogg",
                                    "flac",
                                    "m4a",
                                    "mp4",
                                    "webm",
                                    "avi",
                                    "mov",
                                    "mkv",
                                    "pdf",
                                    "doc",
                                    "docx",
                                    "txt",
                                    "rtf",
                                    "zip",
                                    "tar",
                                    "gz",
                                    "rar",
                                ]
                            )
                        ],
                    ),
                ),
                ("original_filename", models.CharField(max_length=255)),
                (
                    "file_size",
                    models.PositiveIntegerField(help_text="File size in bytes"),
                ),
                ("mime_type", models.CharField(max_length=100)),
                (
                    "media_type",
                    models.CharField(
                        choices=[
                            ("image", "Image"),
                            ("audio", "Audio"),
                            ("video", "Video"),
                            ("document", "Document"),
                            ("archive", "Archive"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=20,
                    ),
                ),
                ("width", models.PositiveIntegerField(blank=True, null=True)),
                ("height", models.PositiveIntegerField(blank=True, null=True)),
                ("duration", models.DurationField(blank=True, null=True)),
                (
                    "storage_path",
                    models.CharField(
                        help_text="Full path in storage backend", max_length=500
                    ),
                ),
                (
                    "storage_url",
                    models.URLField(
                        blank=True, help_text="Public URL for access", max_length=500
                    ),
                ),
                (
                    "checksum",
                    models.CharField(
                        blank=True,
                        help_text="SHA-256 checksum for integrity",
                        max_length=64,
                    ),
                ),
                (
                    "tags",
                    models.JSONField(
                        blank=True, default=list, help_text="Tags for categorization"
                    ),
                ),
                (
                    "folder",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="files",
                        to="medialib.mediafolder",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="uploaded_files",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "media_files",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="MediaAttachment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for this record",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when this record was created",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp when this record was last updated",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this record is active (soft delete mechanism)",
                    ),
                ),
                ("object_id", models.UUIDField()),
                (
                    "purpose",
                    models.CharField(
                        choices=[
                            ("featured", "Featured Image"),
                            ("gallery", "Gallery Image"),
                            ("audio", "Audio Content"),
                            ("document", "Document Attachment"),
                            ("thumbnail", "Thumbnail"),
                            ("cover", "Cover Image"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=50,
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(default=0, help_text="Display order"),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "media_file",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="medialib.mediafile",
                    ),
                ),
            ],
            options={
                "db_table": "media_attachments",
                "ordering": ["order", "created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="mediafile",
            index=models.Index(
                fields=["media_type"], name="media_files_media_t_efc472_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="mediafile",
            index=models.Index(
                fields=["uploaded_by"], name="media_files_uploade_8ca4da_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="mediafile",
            index=models.Index(
                fields=["created_at"], name="media_files_created_c209ba_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="mediafile",
            index=models.Index(
                fields=["original_filename"], name="media_files_origina_92eb4c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="mediaattachment",
            index=models.Index(
                fields=["content_type", "object_id"],
                name="media_attac_content_f8f016_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="mediaattachment",
            index=models.Index(
                fields=["purpose"], name="media_attac_purpose_20bda2_idx"
            ),
        ),
    ]
