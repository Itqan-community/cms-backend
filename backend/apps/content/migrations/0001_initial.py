# Generated by Django 4.2.23 on 2025-08-20 18:39

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when this record was last updated')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this record is active (soft delete mechanism)')),
                ('title', models.CharField(help_text='Title of the Quranic resource', max_length=255)),
                ('description', models.TextField(help_text='Detailed description of the resource content')),
                ('resource_type', models.CharField(choices=[('text', 'Text'), ('audio', 'Audio'), ('translation', 'Translation'), ('tafsir', 'Tafsir')], help_text='Type of Quranic content', max_length=20)),
                ('language', models.CharField(help_text='Language code (en, ar, ur, etc.)', max_length=10)),
                ('version', models.CharField(help_text='Version identifier (e.g., 1.0, 2.1, etc.)', max_length=50)),
                ('checksum', models.CharField(help_text='SHA-256 checksum for content integrity verification', max_length=64)),
                ('metadata', models.JSONField(default=dict, help_text='Additional resource-specific metadata (duration, reciter, etc.)')),
                ('published_at', models.DateTimeField(blank=True, help_text='Timestamp when the resource was published', null=True)),
                ('publisher', models.ForeignKey(help_text='User who published this resource (must have Publisher role)', on_delete=django.db.models.deletion.PROTECT, related_name='published_resources', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Resource',
                'verbose_name_plural': 'Resources',
                'db_table': 'resource',
                'ordering': ['-published_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Distribution',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when this record was last updated')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this record is active (soft delete mechanism)')),
                ('format_type', models.CharField(choices=[('REST_JSON', 'REST API (JSON)'), ('GraphQL', 'GraphQL API'), ('ZIP', 'ZIP Download'), ('API', 'Custom API')], help_text='Format/method for accessing the resource', max_length=20)),
                ('endpoint_url', models.URLField(help_text='API endpoint or download URL for accessing content', validators=[django.core.validators.URLValidator()])),
                ('version', models.CharField(help_text='Distribution version identifier', max_length=50)),
                ('access_config', models.JSONField(default=dict, help_text='Access configuration (API keys, rate limits, authentication)')),
                ('metadata', models.JSONField(default=dict, help_text='Format-specific metadata and configuration')),
                ('resource', models.ForeignKey(help_text='Resource that this distribution provides access to', on_delete=django.db.models.deletion.CASCADE, related_name='distributions', to='content.resource')),
            ],
            options={
                'verbose_name': 'Distribution',
                'verbose_name_plural': 'Distributions',
                'db_table': 'distribution',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='resource',
            index=models.Index(fields=['resource_type'], name='resource_resourc_f0ba8b_idx'),
        ),
        migrations.AddIndex(
            model_name='resource',
            index=models.Index(fields=['language'], name='resource_languag_82f9c9_idx'),
        ),
        migrations.AddIndex(
            model_name='resource',
            index=models.Index(fields=['publisher'], name='resource_publish_c1005c_idx'),
        ),
        migrations.AddIndex(
            model_name='resource',
            index=models.Index(fields=['published_at'], name='resource_publish_141f04_idx'),
        ),
        migrations.AddIndex(
            model_name='distribution',
            index=models.Index(fields=['resource'], name='distributio_resourc_32bf89_idx'),
        ),
        migrations.AddIndex(
            model_name='distribution',
            index=models.Index(fields=['format_type'], name='distributio_format__1d42b7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='distribution',
            unique_together={('resource', 'format_type', 'version')},
        ),
    ]
