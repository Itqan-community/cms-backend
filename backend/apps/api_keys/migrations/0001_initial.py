# Generated by Django 4.2.23 on 2025-08-21 20:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="APIKey",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for this record",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when this record was created",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp when this record was last updated",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this record is active (soft delete mechanism)",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Human-readable name for this API key", max_length=255
                    ),
                ),
                (
                    "key_prefix",
                    models.CharField(
                        help_text="Prefix of the API key for identification (e.g., 'itq_live_')",
                        max_length=10,
                    ),
                ),
                (
                    "key_hash",
                    models.CharField(
                        help_text="SHA-256 hash of the API key",
                        max_length=64,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description of what this key is used for"
                    ),
                ),
                (
                    "permissions",
                    models.JSONField(
                        default=dict, help_text="Specific permissions for this API key"
                    ),
                ),
                (
                    "allowed_ips",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of IP addresses/ranges allowed to use this key",
                    ),
                ),
                (
                    "rate_limit",
                    models.PositiveIntegerField(
                        default=1000, help_text="Requests per hour allowed for this key"
                    ),
                ),
                (
                    "total_requests",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Total number of requests made with this key",
                    ),
                ),
                (
                    "last_used_at",
                    models.DateTimeField(
                        blank=True, help_text="Last time this key was used", null=True
                    ),
                ),
                (
                    "last_used_ip",
                    models.GenericIPAddressField(
                        blank=True,
                        help_text="IP address of the last request",
                        null=True,
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When this key expires (null = never expires)",
                        null=True,
                    ),
                ),
                (
                    "revoked_at",
                    models.DateTimeField(
                        blank=True, help_text="When this key was revoked", null=True
                    ),
                ),
                (
                    "revoked_reason",
                    models.TextField(
                        blank=True, help_text="Reason for revoking this key"
                    ),
                ),
                (
                    "revoked_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who revoked this key",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="revoked_api_keys",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="Owner of this API key",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="api_keys",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "API Key",
                "verbose_name_plural": "API Keys",
                "db_table": "api_key",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="RateLimitEvent",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for this record",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when this record was created",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp when this record was last updated",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this record is active (soft delete mechanism)",
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        help_text="IP address that exceeded the rate limit"
                    ),
                ),
                (
                    "endpoint",
                    models.CharField(
                        help_text="API endpoint that was accessed", max_length=255
                    ),
                ),
                (
                    "method",
                    models.CharField(help_text="HTTP method used", max_length=10),
                ),
                (
                    "limit_type",
                    models.CharField(
                        choices=[
                            ("api_key", "API Key Rate Limit"),
                            ("ip", "IP Rate Limit"),
                            ("user", "User Rate Limit"),
                            ("global", "Global Rate Limit"),
                        ],
                        help_text="Type of rate limit that was exceeded",
                        max_length=50,
                    ),
                ),
                (
                    "current_count",
                    models.PositiveIntegerField(
                        help_text="Current request count when limit was exceeded"
                    ),
                ),
                (
                    "limit_value",
                    models.PositiveIntegerField(
                        help_text="The rate limit value that was exceeded"
                    ),
                ),
                (
                    "window_seconds",
                    models.PositiveIntegerField(
                        help_text="Rate limit window in seconds"
                    ),
                ),
                (
                    "api_key",
                    models.ForeignKey(
                        blank=True,
                        help_text="API key that exceeded the rate limit (if applicable)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rate_limit_events",
                        to="api_keys.apikey",
                    ),
                ),
            ],
            options={
                "verbose_name": "Rate Limit Event",
                "verbose_name_plural": "Rate Limit Events",
                "db_table": "rate_limit_event",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["ip_address", "created_at"],
                        name="rate_limit__ip_addr_16a652_idx",
                    ),
                    models.Index(
                        fields=["api_key", "created_at"],
                        name="rate_limit__api_key_a88c01_idx",
                    ),
                    models.Index(
                        fields=["limit_type", "created_at"],
                        name="rate_limit__limit_t_b59b77_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="APIKeyUsage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for this record",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when this record was created",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp when this record was last updated",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this record is active (soft delete mechanism)",
                    ),
                ),
                (
                    "endpoint",
                    models.CharField(
                        help_text="API endpoint that was accessed", max_length=255
                    ),
                ),
                (
                    "method",
                    models.CharField(help_text="HTTP method used", max_length=10),
                ),
                (
                    "status_code",
                    models.PositiveIntegerField(help_text="HTTP response status code"),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(help_text="IP address of the request"),
                ),
                (
                    "user_agent",
                    models.TextField(blank=True, help_text="User agent string"),
                ),
                (
                    "request_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Request parameters and metadata",
                    ),
                ),
                (
                    "response_time",
                    models.FloatField(
                        blank=True, help_text="Response time in milliseconds", null=True
                    ),
                ),
                (
                    "api_key",
                    models.ForeignKey(
                        help_text="API key that was used",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usage_logs",
                        to="api_keys.apikey",
                    ),
                ),
            ],
            options={
                "verbose_name": "API Key Usage",
                "verbose_name_plural": "API Key Usage",
                "db_table": "api_key_usage",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["api_key", "created_at"],
                        name="api_key_usa_api_key_0fc119_idx",
                    ),
                    models.Index(
                        fields=["endpoint", "created_at"],
                        name="api_key_usa_endpoin_c7aa67_idx",
                    ),
                    models.Index(
                        fields=["status_code", "created_at"],
                        name="api_key_usa_status__ebff8e_idx",
                    ),
                ],
            },
        ),
    ]
