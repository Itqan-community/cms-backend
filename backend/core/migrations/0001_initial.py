# Generated by Django 4.2.23 on 2025-08-24 15:08

from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('url', models.URLField(help_text='URL to the full license text')),
                ('summary', models.TextField(help_text='Human-readable summary of the license')),
                ('full_text', models.TextField(blank=True, help_text='Full legal text of the license')),
                ('allows_commercial_use', models.BooleanField(default=True)),
                ('allows_modification', models.BooleanField(default=True)),
                ('allows_distribution', models.BooleanField(default=True)),
                ('requires_attribution', models.BooleanField(default=False)),
                ('requires_share_alike', models.BooleanField(default=False)),
                ('version', models.CharField(blank=True, max_length=10)),
                ('publisher', models.CharField(blank=True, max_length=100)),
                ('published_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'License',
                'verbose_name_plural': 'Licenses',
                'db_table': 'core_licenses',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('code', models.CharField(choices=[('owner', 'Owner'), ('manager', 'Manager'), ('auditor', 'Auditor'), ('contributor', 'Contributor')], max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('can_create_resources', models.BooleanField(default=False)),
                ('can_edit_resources', models.BooleanField(default=False)),
                ('can_delete_resources', models.BooleanField(default=False)),
                ('can_manage_members', models.BooleanField(default=False)),
                ('can_manage_organization', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Role',
                'verbose_name_plural': 'Roles',
                'db_table': 'core_roles',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=150)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('auth_provider', models.CharField(choices=[('auth0', 'Auth0'), ('github', 'GitHub'), ('google', 'Google'), ('email', 'Email')], default='email', max_length=20)),
                ('auth_provider_id', models.CharField(blank=True, max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('avatar_url', models.URLField(blank=True)),
                ('bio', models.TextField(blank=True)),
                ('website_url', models.URLField(blank=True)),
                ('github_url', models.URLField(blank=True)),
                ('preferred_language', models.CharField(default='en', max_length=10)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'core_users',
            },
        ),
    ]
