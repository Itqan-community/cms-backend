erDiagram
    %% Core Entities for Itqan CMS Database Schema
    %% Based on the high-level ER diagram requirements
    
    ROLE {
        uuid id PK
        string name "Admin, Publisher, Developer, Reviewer"
        text description
        jsonb permissions
        boolean is_active
        timestamp created_at
        timestamp updated_at
    }
    
    USER {
        uuid id PK
        string auth0_id UK "Auth0 subject identifier"
        string email UK
        string username
        string first_name
        string last_name
        uuid role_id FK
        jsonb profile_data "Additional user metadata"
        boolean is_active
        timestamp last_login
        timestamp created_at
        timestamp updated_at
    }
    
    RESOURCE {
        uuid id PK
        string title
        text description
        string resource_type "text, audio, translation, tafsir"
        string language "en, ar, etc"
        string version
        string checksum "Content integrity verification"
        uuid publisher_id FK "References USER with Publisher role"
        jsonb metadata "Additional resource-specific data"
        boolean is_active
        timestamp published_at
        timestamp created_at
        timestamp updated_at
    }
    
    LICENSE {
        uuid id PK
        uuid resource_id FK
        string license_type "open, restricted, commercial"
        text terms "Legal terms and conditions"
        jsonb geographic_restrictions "Allowed countries/regions"
        jsonb usage_restrictions "Rate limits, attribution requirements"
        boolean requires_approval
        boolean is_active
        timestamp effective_from
        timestamp expires_at
        timestamp created_at
        timestamp updated_at
    }
    
    DISTRIBUTION {
        uuid id PK
        uuid resource_id FK
        string format_type "REST_JSON, GraphQL, ZIP, API"
        string endpoint_url "Access URL or API endpoint"
        string version
        jsonb access_config "API keys, rate limits, etc"
        jsonb metadata "Format-specific configuration"
        boolean is_active
        timestamp created_at
        timestamp updated_at
    }
    
    ACCESS_REQUEST {
        uuid id PK
        uuid requester_id FK "References USER with Developer role"
        uuid distribution_id FK
        string status "pending, approved, rejected"
        text justification "Developer's use case description"
        text admin_notes "Admin review notes"
        uuid approved_by FK "References USER with Admin role"
        boolean is_active
        timestamp requested_at
        timestamp reviewed_at
        timestamp expires_at
        timestamp created_at
        timestamp updated_at
    }
    
    USAGE_EVENT {
        uuid id PK
        uuid user_id FK "Developer making the request"
        uuid resource_id FK "Resource being accessed"
        uuid distribution_id FK "Specific distribution used"
        string event_type "api_call, download, view"
        string endpoint "Specific API endpoint called"
        integer request_size "Size of request in bytes"
        integer response_size "Size of response in bytes"
        string ip_address
        string user_agent
        jsonb metadata "Additional tracking data"
        timestamp occurred_at
        timestamp created_at
    }

    %% Relationships
    ROLE ||--o{ USER : "has"
    USER ||--o{ RESOURCE : "publishes"
    USER ||--o{ ACCESS_REQUEST : "makes"
    USER ||--o{ ACCESS_REQUEST : "approves"
    USER ||--o{ USAGE_EVENT : "triggers"
    
    RESOURCE ||--o{ LICENSE : "licensed_by"
    RESOURCE ||--o{ DISTRIBUTION : "exposes"
    RESOURCE ||--o{ USAGE_EVENT : "consumed_in"
    
    DISTRIBUTION ||--o{ ACCESS_REQUEST : "requested_via"
    DISTRIBUTION ||--o{ USAGE_EVENT : "accessed_through"
    
    LICENSE ||--o{ ACCESS_REQUEST : "governs"
