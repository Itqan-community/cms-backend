# Generated by Django 5.2.6 on 2025-09-17 14:49

import apps.core.uploads
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Publisher",
            fields=[
                (
                    "id",
                    models.AutoField(
                        help_text="Unique identifier for this record",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Timestamp when this record was created",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp when this record was last updated",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this record is active (soft delete mechanism)",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Publisher name e.g. 'Tafsir Center'", max_length=255
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="URL-friendly slug e.g. 'tafsir-center'", unique=True
                    ),
                ),
                (
                    "icon_url",
                    models.ImageField(
                        blank=True,
                        help_text="Icon/logo image - used in V1 UI: Publisher Page",
                        upload_to=apps.core.uploads.upload_to_publisher_icons,
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=[
                                    "jpg",
                                    "jpeg",
                                    "png",
                                    "gif",
                                    "webp",
                                    "svg",
                                ]
                            )
                        ],
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Detailed publisher description"
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, help_text="Publisher address", max_length=255
                    ),
                ),
                ("website", models.URLField(blank=True, help_text="Publisher website")),
                (
                    "is_verified",
                    models.BooleanField(
                        default=True, help_text="Whether publisher is verified"
                    ),
                ),
                (
                    "contact_email",
                    models.EmailField(
                        blank=True,
                        help_text="Contact email for the publisher",
                        max_length=254,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PublisherMember",
            fields=[
                (
                    "id",
                    models.AutoField(
                        help_text="Unique identifier for this record",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Timestamp when this record was created",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp when this record was last updated",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this record is active (soft delete mechanism)",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[("owner", "Owner"), ("manager", "Manager")],
                        help_text="Member's role in the publisher, just for information. This field WILL NOT be used for permission checks. or any code checks",
                        max_length=20,
                    ),
                ),
                (
                    "publisher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="memberships",
                        to="publishers.publisher",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="publisher_memberships",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("publisher", "user")},
            },
        ),
        migrations.AddField(
            model_name="publisher",
            name="members",
            field=models.ManyToManyField(
                related_name="publishers",
                through="publishers.PublisherMember",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
    ]
