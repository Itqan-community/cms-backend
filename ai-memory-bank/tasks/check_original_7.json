{
    "prompt": "You are an autonomous coding agent completing STORY-7: MinIO Upload Provider for Itqan CMS. Configure Strapi v5 to store file uploads in local MinIO bucket instead of local filesystem, ensuring S3-compatible setup works in development.",
    "context": {
        "project": "Itqan CMS",
        "feature": "File Storage Integration",
        "tech_stack": [
            "Strapi v5",
            "MinIO",
            "Docker"
        ],
        "environment": "Development"
    },
    "objectives": [
        "Install and configure Strapi upload provider for S3-compatible storage",
        "Connect Strapi to MinIO container running on port 9000",
        "Create initial bucket and set appropriate permissions",
        "Test file upload via Strapi admin interface"
    ],
    "tasks": [
        "Install @strapi/provider-upload-aws-s3 package in cms/",
        "Configure config/plugins.ts with MinIO endpoint and credentials",
        "Add MinIO bucket creation script or manual setup instructions",
        "Update env.dev.example with proper S3 provider settings",
        "Test media library upload and verify files stored in MinIO",
        "Document MinIO console access and bucket management"
    ],
    "guard_rails": [
        "Use S3_FORCE_PATH_STYLE=true for MinIO compatibility",
        "Store MinIO credentials in environment variables only",
        "Ensure bucket has appropriate access policy for development",
        "Do not commit real access keys to version control"
    ],
    "acceptance_criteria": [
        "Given I upload an image via Strapi admin, then it appears in MinIO bucket",
        "Given I access uploaded file URL, then image displays correctly",
        "MinIO console shows uploaded files in itqan-uploads bucket",
        "No files are stored in local public/uploads directory"
    ],
    "definition_of_done": [
        "Upload provider configuration documented in README",
        "Test upload works end-to-end via docker-compose stack",
        "MinIO bucket accessible via console at localhost:9001"
    ],
    "out_of_scope": [
        "Production S3 or Alibaba OSS configuration",
        "Image transformation or optimization",
        "CDN integration"
    ],
    "references": [
        "docker-compose.yaml MinIO service",
        "env.dev.example AWS_* variables",
        "Strapi upload provider docs",
        "Screen ADMIN-001: Media Library interface",
        "English wireframe: ai-memory-bank/tasks/screens/en/admin_wireframes.html#ADMIN-001"
    ]
}