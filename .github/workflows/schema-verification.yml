name: DISABLED - Schema Verification

on:
  pull_request:
    paths:
      - 'apps/*/models.py'
      - 'apps/*/migrations/*.py'
  push:
    branches: [main, develop, staging]
    paths:
      - 'apps/*/models.py'
      - 'apps/*/migrations/*.py'

jobs:
  verify-schema:
    runs-on: ubuntu-latest
    if: ${{ false }}

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: cms_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        pip install -r requirements/base.txt

    - name: Set up test database
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/cms_test
        DJANGO_SETTINGS_MODULE: config.settings.base
      run: |
        python manage.py migrate

    - name: Verify schema consistency
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/cms_test
        DJANGO_SETTINGS_MODULE: config.settings.base
      run: |
        echo "🔍 Verifying database schema matches model definitions..."
        python manage.py verify_schema

        echo "🔍 Checking for missing migrations..."
        python manage.py makemigrations --check --dry-run

        echo "✅ Schema verification completed successfully!"

    - name: Test critical models
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/cms_test
        DJANGO_SETTINGS_MODULE: config.settings.base
      run: |
        python manage.py shell -c "
        from apps.content.models import Asset, Resource, PublishingOrganization
        from django.db import connection

        # Test Asset-Resource relationship
        cursor = connection.cursor()
        cursor.execute('''
            SELECT column_name FROM information_schema.columns
            WHERE table_name = 'asset' AND column_name = 'resource_id'
        ''')

        if not cursor.fetchone():
            print('❌ CRITICAL: Asset table missing resource_id column!')
            exit(1)

        print('✅ Asset-Resource relationship verified')
        print('✅ Critical model verification passed')
        "

  check-migrations:
    runs-on: ubuntu-latest
    if: ${{ false }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        pip install -r requirements/base.txt

    - name: Check migration conflicts
      env:
        DJANGO_SETTINGS_MODULE: config.settings.base
      run: |
        echo "🔍 Checking for migration conflicts..."

        # Check if any apps have multiple leaf migrations
        python manage.py showmigrations | grep -E "^\s*\[\s*\]\s*[0-9]" > pending.txt || true

        if [ -s pending.txt ]; then
          echo "⚠️ Found pending migrations:"
          cat pending.txt
          echo ""
          echo "💡 Run 'python manage.py migrate' before deployment"
        else
          echo "✅ No migration conflicts detected"
        fi

        rm -f pending.txt
